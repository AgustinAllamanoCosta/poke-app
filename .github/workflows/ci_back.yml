name: Continues_Integration_Back

on:
  workflow_dispatch:
    inputs:
      input:
        description: "Test"
        required: false
        default: "test"
  push:
    paths:
      - back/**
    branches:
      - "main"

defaults:
  run:
    shell: bash
    working-directory: ./back

jobs:
  install-dep:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: |
           ./back/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies with Node.js 21.x
        uses: actions/setup-node@v4
        with:
          node-version: 21.x
      - run: pwd && yarn

  lint:
    runs-on: ubuntu-latest

    needs: install-dep

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: |
            ./back/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Run Lint with Node.js 21.x
        uses: actions/setup-node@v4
        with:
          node-version: 21.x
      - run: yarn lint

  test:
    runs-on: ubuntu-latest

    needs: lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: |
            ./back/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Run Test with Node.js 21.x
        uses: actions/setup-node@v4
        with:
          node-version: 21.x
      - run: yarn test

  build:
    runs-on: ubuntu-latest

    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: |
            ./back/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Use Node.js 21.x
        uses: actions/setup-node@v4
        with:
          node-version: 21.x

      - name: Build with envs
        run: | 
          yarn vault:pull production .env --dotenvMe='${{ secrets.DOTENV_ME }}' --yes
          yarn build

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: production-build
          path: |
            ./back/dist

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.0
        with:
          images: |
            ghcr.io/${{ github.repository }}

      - name: Build and push Docker images 
        uses: docker/build-push-action@v5.1.0
        with:
          context: ./back
          push: true
          file: ./back/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  version:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: |
            ./back/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Cache changelog
        id: cache-changelog
        uses: actions/cache@v4
        with:
          path: |
            ./back/CHANGELOG.md
          key: ${{ runner.os }}-changelog-${{ hashFiles('**/CHANGELOG.md') }}

      - name: Install Latest Node
        uses: actions/setup-node@v4
        with:
          node-version: 21.x

      - name: Configure commiter
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Generate Version
        run: |
          yarn release

      - name: Pushing Version
        run: |
          git pull
          git commit --allow-empty -m "[skip ci]"
          git push --follow-tags origin main

  deployment:
    runs-on: ubuntu-latest

    needs: version

    steps:
    - name: Deploy with docker commands
      uses: garygrossgarten/github-action-ssh@release
      with:
        command: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u allamanocostaagustin@gmail.com --password-stdin && docker pull ghcr.io/agustinallamanocosta/poke-app:main &&  docker container run --name poke_back -d -p 8080:3000 ghcr.io/agustinallamanocosta/poke-app:main 
        host: ${{ secrets.REMOTE_ADDRESS }}
        username: agustinallamanocosta
        privateKey: ${{ secrets.GCLOUD_KEY}}
