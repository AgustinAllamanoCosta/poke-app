name: Continues_Integration_Front

on:
  workflow_dispatch:
    inputs:
      input:
        description: "Test"
        required: false
        default: "test"
  push:
    paths:
      - front/**
    branches:
      - "main"

jobs:
  install-dep:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: |
            ./front/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies with Node.js 21.x
        uses: actions/setup-node@v4
        with:
          node-version: 21.x
      - run: yarn

  lint:
    runs-on: ubuntu-latest

    needs: install-dep

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: |
            ./front/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Run Lint with Node.js 21.x
        uses: actions/setup-node@v4
        with:
          node-version: 21.x
      - run: yarn lint

  build:
    runs-on: ubuntu-latest

    needs: lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: |
            ./front/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Use Node.js 21.x
        uses: actions/setup-node@v4
        with:
          node-version: 21.x

      - name: Build 
        run: yarn build

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: production-build
          path: |
            ./front/dist

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.0
        with:
          images: |
            ghcr.io/${{ github.repository }}

  version:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: |
            ./front/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install Latest Node
        uses: actions/setup-node@v4
        with:
          node-version: 21.x

      - name: Configure commiter
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Generate Version
        run: |
          yarn release

      - name: Pushing Version
        run: |
          git pull
          git commit --allow-empty -m "[skip ci]"
          git push --follow-tags origin master
