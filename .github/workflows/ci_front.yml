name: Continues_Integration_Front

on:
  workflow_dispatch:
    inputs:
      input:
        description: "Test"
        required: false
        default: "test"
  push:
    paths:
      - front/**
    branches:
      - "main"


defaults:
  run:
    shell: bash
    working-directory: ./front

jobs:
  install-dep:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: |
            ./front/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies with Node.js 21.x
        uses: actions/setup-node@v4
        with:
          node-version: 21.x
      - run: yarn

  lint:
    runs-on: ubuntu-latest

    needs: install-dep

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: |
            ./front/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Run Lint with Node.js 21.x
        uses: actions/setup-node@v4
        with:
          node-version: 21.x
      - run: yarn lint

  build:
    runs-on: ubuntu-latest

    needs: lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: |
            ./front/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Use Node.js 21.x
        uses: actions/setup-node@v4
        with:
          node-version: 21.x

      - name: Build
        run: yarn build

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: production-build
          path: |
            ./front/dist

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.0
        with:
          images: |
            ghcr.io/${{ github.repository }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5.1.0
        with:
          context: ./front
          push: true
          file: ./front/Dockerfile
          tags: ghcr.io/agustinallamanocosta/poke-app:front
          labels: front


  deploy_on_firebase:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4


      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: |
            ./front/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install Latest Node
        uses: actions/setup-node@v4
        with:
          node-version: 21.x

      - name: Download production artifact
        uses: actions/download-artifact@v4.1.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          name: production-build
          path: ./front/dist

      - name: Configure Envoironment
        shell: bash
        run: |
          yarn vault-pull production .env --dotenvMe='${{ secrets.DOTENV_ME }}' --yes
          mv .env ./front/dist

      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0.7.1
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_POKE_APP_F14FD }}
          projectId: poke-app-f14fd
          channelId: live
